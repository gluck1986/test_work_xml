// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	criteria "gluck1986/test_work_xml/internal/data_source/criteria"

	mock "github.com/stretchr/testify/mock"

	model "gluck1986/test_work_xml/internal/model"
)

// ISdnRepository is an autogenerated mock type for the ISdnRepository type
type ISdnRepository struct {
	mock.Mock
}

// ReadMany provides a mock function with given fields: _a0
func (_m *ISdnRepository) ReadMany(_a0 criteria.SdnCriteria) {
	_m.Called(_a0)
}

// ReadOne provides a mock function with given fields: uid
func (_m *ISdnRepository) ReadOne(uid int) (model.SdnEntity, error) {
	ret := _m.Called(uid)

	var r0 model.SdnEntity
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (model.SdnEntity, error)); ok {
		return rf(uid)
	}
	if rf, ok := ret.Get(0).(func(int) model.SdnEntity); ok {
		r0 = rf(uid)
	} else {
		r0 = ret.Get(0).(model.SdnEntity)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Write provides a mock function with given fields: entity
func (_m *ISdnRepository) Write(entity model.SdnEntity) error {
	ret := _m.Called(entity)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.SdnEntity) error); ok {
		r0 = rf(entity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteMany provides a mock function with given fields: _a0
func (_m *ISdnRepository) WriteMany(_a0 []model.SdnEntity) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func([]model.SdnEntity) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewISdnRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewISdnRepository creates a new instance of ISdnRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewISdnRepository(t mockConstructorTestingTNewISdnRepository) *ISdnRepository {
	mock := &ISdnRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

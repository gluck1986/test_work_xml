// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	datasource "gluck1986/test_work_xml/internal/datasource"

	mock "github.com/stretchr/testify/mock"
)

// ISdnParserFactory is an autogenerated mock type for the ISdnParserFactory type
type ISdnParserFactory struct {
	mock.Mock
}

// GetParser provides a mock function with given fields:
func (_m *ISdnParserFactory) GetParser() (datasource.ISdnParser, error) {
	ret := _m.Called()

	var r0 datasource.ISdnParser
	var r1 error
	if rf, ok := ret.Get(0).(func() (datasource.ISdnParser, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() datasource.ISdnParser); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(datasource.ISdnParser)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewISdnParserFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewISdnParserFactory creates a new instance of ISdnParserFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewISdnParserFactory(t mockConstructorTestingTNewISdnParserFactory) *ISdnParserFactory {
	mock := &ISdnParserFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
